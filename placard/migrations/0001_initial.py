# Generated by Django 4.1.13 on 2024-04-04 16:04

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Autorisations',
            fields=[
                ('display_name', models.CharField(max_length=255)),
                ('autorisations_identifier', models.CharField(blank=True, editable=False, max_length=255, primary_key=True, serialize=False, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='AutorisationsGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('display_name', models.CharField(max_length=255)),
                ('identifier', models.CharField(blank=True, max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='CustomBaseUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('accreditations', models.CharField(blank=True, max_length=200)),
                ('last_updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_login', models.DateTimeField(auto_now_add=True, verbose_name='last login')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='date joined')),
                ('Active', models.BooleanField(default=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_users', to='placard.custombaseuser')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('last_updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_users', to='placard.custombaseuser')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Hierarchy',
            fields=[
                ('hierachy_identifier', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('hierarchy_name', models.CharField(max_length=255)),
                ('status', models.CharField(choices=[('Activated', 'Activated'), ('Deactivated', 'Deactivated')], default='Activated', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Accounts',
            fields=[
                ('custombaseuser_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, to='placard.custombaseuser')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=30)),
                ('username', models.CharField(max_length=150, unique=True)),
                ('user_identifier', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('Activated', 'Activated'), ('Deactivated', 'Deactivated')], default='Activated', max_length=20)),
            ],
            options={
                'verbose_name_plural': 'Accounts',
            },
            bases=('placard.custombaseuser', models.Model),
        ),
        migrations.CreateModel(
            name='AccountGroup',
            fields=[
                ('custombaseuser_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, to='placard.custombaseuser')),
                ('display_name', models.CharField(max_length=128)),
                ('group_identifier', models.UUIDField(blank=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('Activated', 'Activated'), ('Deactivated', 'Deactivated')], default='Activated', max_length=20)),
                ('accounts', models.ManyToManyField(blank=True, related_name='assigned_groups', to=settings.AUTH_USER_MODEL)),
                ('autorisations', models.ManyToManyField(blank=True, related_name='groups', to='placard.autorisations')),
            ],
            options={
                'abstract': False,
            },
            bases=('placard.custombaseuser', models.Model),
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('createdAt', models.DateTimeField(blank=True, default=django.utils.timezone.now)),
                ('lastUpdatedAt', models.DateTimeField(auto_now=True)),
                ('display_name', models.CharField(max_length=255)),
                ('role_identifier', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('Activated', 'Activated'), ('Deactivated', 'Deactivated')], default='Activated', max_length=20)),
                ('autorisations', models.ManyToManyField(related_name='roles', to='placard.autorisations')),
                ('createdBy', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='created_%(class)s', to=settings.AUTH_USER_MODEL)),
                ('lastUpdatedBy', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='updated_%(class)s', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Projects',
            fields=[
                ('Project_identifier', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('Project_name', models.CharField(max_length=100)),
                ('status', models.CharField(choices=[('Activated', 'Activated'), ('Deactivated', 'Deactivated')], default='Activated', max_length=20)),
                ('Parent_Identifier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='placard.projects')),
                ('hierachy_identifier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='projects', to='placard.hierarchy')),
            ],
        ),
        migrations.CreateModel(
            name='HierarchyItem',
            fields=[
                ('HieraItem_identifier', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('level', models.IntegerField(choices=[(1, 'Level 1'), (2, 'Level 2'), (3, 'Level 3'), (4, 'Level 4'), (5, 'Level 5'), (6, 'Level 6')])),
                ('name', models.CharField(max_length=255)),
                ('status', models.CharField(choices=[('Activated', 'Activated'), ('Deactivated', 'Deactivated')], default='Activated', max_length=20)),
                ('hierarchy_identifier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='placard.hierarchy')),
                ('parent_identifier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='placard.hierarchyitem')),
            ],
        ),
        migrations.AddField(
            model_name='custombaseuser',
            name='roles',
            field=models.ManyToManyField(blank=True, related_name='assigned_users', to='placard.role'),
        ),
        migrations.AddField(
            model_name='custombaseuser',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
        migrations.CreateModel(
            name='UsersGroupRelationship',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('statut_in_Group', models.CharField(choices=[('activated', 'Activated'), ('deactivated', 'Deactivated')], default='activated', max_length=20)),
                ('createdAt', models.DateTimeField(blank=True, default=django.utils.timezone.now)),
                ('lastUpdatedAt', models.DateTimeField(auto_now=True)),
                ('account_identifier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_groups', to=settings.AUTH_USER_MODEL)),
                ('accounts_group_identifier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='group_accounts', to='placard.accountgroup')),
                ('createdBy', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='created_%(class)s', to=settings.AUTH_USER_MODEL)),
                ('lastUpdatedBy', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='updated_%(class)s', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'users_group_relationship',
            },
        ),
        migrations.CreateModel(
            name='Token',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(max_length=255, unique=True)),
                ('created_for', models.CharField(max_length=255)),
                ('valid_until', models.DateTimeField()),
                ('token_usage', models.CharField(max_length=255)),
                ('accounts', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Accreditation',
            fields=[
                ('accreditation_identifier', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('status', models.CharField(choices=[('Activated', 'Activated'), ('Deactivated', 'Deactivated')], default='Activated', max_length=20)),
                ('typeOfAccess', models.CharField(choices=[('ALL_DESCENDANT', 'Tous les descendants du niveau'), ('LEVEL_ONLY', 'Niveau seulement')], max_length=128)),
                ('assignedAt', models.DateTimeField(auto_now_add=True)),
                ('lastUpdatedAt', models.DateTimeField(auto_now=True)),
                ('HieraItems_identifier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='placard.hierarchyitem')),
                ('projects_identifier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='placard.projects')),
                ('abstractuser', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='GroupRole',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role_identifier', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='placard.role')),
                ('account_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='placard.accountgroup')),
            ],
            options={
                'unique_together': {('account_group', 'role')},
            },
        ),
    ]
